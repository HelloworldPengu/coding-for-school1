
import cv2
import mediapipe as mp
import numpy as np

# 얼굴 인식 도구 초기화
mp_face_mesh = mp.solutions.face_mesh
face_mesh = mp_face_mesh.FaceMesh(static_image_mode=False, max_num_faces=1)
mp_drawing = mp.solutions.drawing_utils

# 황금비율 계산 함수 (예시 기준: 눈 사이 거리 / 얼굴 너비 등)
def calculate_ratio(landmarks, img_w, img_h):
    # 예시: 눈 사이 거리와 얼굴 높이를 이용한 단순한 비율 계산
    left_eye = landmarks[33]  # 왼쪽 눈 바깥
    right_eye = landmarks[263]  # 오른쪽 눈 바깥
    chin = landmarks[152]  # 턱 끝
    forehead = landmarks[10]  # 이마 중앙

    eye_dist = np.linalg.norm(np.array([left_eye.x - right_eye.x, left_eye.y - right_eye.y]))
    face_height = np.linalg.norm(np.array([chin.y - forehead.y]))
    if face_height == 0:
        return 0
    ratio = eye_dist / face_height
    score = (1 - abs(ratio - 0.618)) * 100  # 황금비율(0.618)과의 차이로 점수화
    return max(0, min(100, score))

# 웹캠 실행
cap = cv2.VideoCapture(0)
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    img_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = face_mesh.process(img_rgb)
    h, w, _ = frame.shape

    if results.multi_face_landmarks:
        for face_landmarks in results.multi_face_landmarks:
            mp_drawing.draw_landmarks(frame, face_landmarks, mp_face_mesh.FACEMESH_TESSELATION)
            landmarks = face_landmarks.landmark
            score = calculate_ratio(landmarks, w, h)
            text = f"황금비율 유사도: {int(score)}%"
            cv2.putText(frame, text, (30, 50), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0,255,0), 2)
            cv2.putText(frame, "당신은 있는 그대로 아름답습니다 :)", (30, 90), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0,200,255), 2)
    else:
        cv2.putText(frame, "사람 얼굴을 인식할 수 없습니다.", (30, 50), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0,0,255), 2)
        cv2.putText(frame, "사물일 가능성이 높습니다!", (30, 90), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0,0,255), 2)

    cv2.imshow("Face Golden Ratio Analyzer", frame)
    if cv2.waitKey(1) & 0xFF == 27:
        break

cap.release()
cv2.destroyAllWindows()
